name: Build

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: amd64,riscv64,arm64

      - uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/tiiuae/tii-fogsw-tools
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=sha
            type=raw,value=latest

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build ðŸ”¨
        uses: docker/build-push-action@v5
        with:
          outputs: type=docker
          tags: smoketest-img  # proper tags will be pushed later

      - name: Smoke test ðŸ”¥
        run: |
          set -eu

          # when running without arguments, it should provide list of tools available
          docker run --name=smoketest --rm -t smoketest-img > list-of-tools.txt

          # ask for help with mavlink shell
          docker run --name=smoketest --rm -t smoketest-img mavlink_shell.py --help > mavlink-shell-help.txt

          if ! grep -q "mavlink_shell.py" list-of-tools.txt ; then
              echo "when running without arguments it doesn't list the expected tool"
              exit 1
          fi

          if ! grep -q "  --baudrate BAUDRATE" mavlink-shell-help.txt ; then
              echo "Output of 'mavlink_shell.py --help' doesn't contain expected string"
              exit 1
          fi

      - name: Push ðŸ”¼
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64,linux/riscv64
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
